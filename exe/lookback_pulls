#!/usr/bin/env ruby

ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile', __FILE__)
require 'bundler/setup'

require 'optparse'
lib = File.expand_path('../../lib', __FILE__)
require "#{lib}/furik"

options = ARGV.getopts('g:l:s:e:', 'gh:true', 'ghe:true', 'start:', 'end:')

gh = (options['g'] || options['gh']) == 'true'
ghe = (options['l'] || options['ghe']) == 'true'
start_date =  (options['s'] || options['start'])
end_date = (options['e'] || options['end'])
start_date = Date.parse(start_date) if start_date
end_date = Date.parse(end_date) if end_date

puts "Pull Requests#{" (#{start_date}...#{end_date})" if start_date && end_date}"
puts '-'
puts ''

Furik.pull_requests(gh: gh, ghe: ghe) do |repo, issues|
  if issues && !issues.empty?
    string_issues = issues.each.with_object('') do |issue, memo|
      date = issue.created_at.localtime.to_date

      next if start_date && date < start_date
      next if end_date && date > end_date

      memo << "- [#{issue.number} #{issue.state}](#{issue.html_url}):"
      memo << " #{issue.title}"
      memo << " (#{issue.body.plain.cut})" if issue.body && !issue.body.empty?
      memo << " #{issue.created_at.localtime.to_date}\n"
    end

    unless string_issues == ''
      puts "### #{repo}"
      puts ''
      puts string_issues
      puts ''
    end
  end
end
